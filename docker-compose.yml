version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: zigo-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root123}
      MYSQL_DATABASE: ${DB_NAME:-zigo_ecommerce}
      MYSQL_USER: ${DB_USER:-zigo_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root123}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./Backend/database-schema-simple.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zigo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root123}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para manejo de sesiones
  redis:
    image: redis:7-alpine
    container_name: zigo-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - zigo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend NestJS
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: zigo-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-zigo_user}
      DB_PASSWORD: ${DB_PASSWORD:-root123}
      DB_NAME: ${DB_NAME:-zigo_ecommerce}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-1d}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - zigo-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./Frontend/zigo-frontend
      dockerfile: Dockerfile
    container_name: zigo-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - zigo-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  zigo-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
